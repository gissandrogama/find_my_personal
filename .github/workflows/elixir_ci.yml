name: ELIXIR CI

on: pull_request

jobs:
  lint:
   runs-on: ubuntu-latest
   steps:
    - uses: actions/checkout@v2
    - uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        otp-version: '24.0'
        elixir-version: '1.12.0'

    - uses: actions/cache@v2
      env:
        cache-name: cache-elixir-deps
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
                    ${{ runner.os }}-build-${{ env.cache-name }}-
                    ${{ runner.os }}-build-
                    ${{ runner.os }}-
    - name: deps
      run: mix deps.get
    - name: LINT CODE
      run: mix credo --strict

  check_format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        otp-version: '24.0'
        elixir-version: '1.12.0'

    - uses: actions/cache@v2
      env:
        cache-name: cache-elixir-deps
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
                    ${{ runner.os }}-build-${{ env.cache-name }}-
                    ${{ runner.os }}-build-
                    ${{ runner.os }}-
    - name: deps
      run: mix deps.get
    - name: Format
      run: mix format --check-formatted

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        otp-version: '24.0'
        elixir-version: '1.12.0'

    - uses: actions/cache@v2
      env:
        cache-name: cache-elixir-deps
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
                    ${{ runner.os }}-build-${{ env.cache-name }}-
                    ${{ runner.os }}-build-
                    ${{ runner.os }}-
    - name: deps
      run: mix deps.get
    - name: Format
      run: mix sobelow --config

  setup_node:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
    - uses: actions/setup-node@v2
      with:
        otp-version: '24.0'
        elixir-version: '1.12.0'

    - uses: actions/cache@v2
      env:
        cache-name: cache-elixir-deps
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
                    ${{ runner.os }}-build-${{ env.cache-name }}-
                    ${{ runner.os }}-build-
                    ${{ runner.os }}-
    - name: Find yarn cache location
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install deps
      run: |
        mix deps.get
        (cd assets && yarn)
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
        with:
          otp-version: '24.0'
          elixir-version: '1.12.0'

      - uses: actions/cache@v2
        env:
          cache-name: cache-elixir-deps
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}-test
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: ==> 🔎 Integrating test
        run: mix coveralls.json
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

    services:
      pg:
        image: postgres:12
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
